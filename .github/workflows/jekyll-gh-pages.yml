# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
          working-directory: pages
          bundler: Gemfile.lock
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Merge
        run: |
          pip install -r requirements.txt
          pip install jupyterlab black[jupyter]
          python pages/merger.py \
            src/story/Introduction.ipynb \
            src/story/Question_1.ipynb \
            src/story/Question_2.ipynb \
            src/story/Question_3.ipynb \
            src/story/Question_4.ipynb \
            src/story/Question_5.ipynb \
            src/story/Question_6.ipynb \
            src/story/Question_7.ipynb \
            src/story/Conclusion.ipynb \
            > pages/merged.ipynb
          python pages/render.py pages/merged.ipynb > pages/index.markdown
      - name: Build with Jekyll
        run: |
          cd pages
          bundle install
          bundle exec jekyll build --destination _site --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages/_site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
